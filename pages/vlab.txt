function powAndMod(G, a, p) {
   if (a == 1)
        return G;
    else
        return((Math.pow(G, a)) % p);
} 


function calculateGA() {
	var currentGenerator  = document.getElementById("generator").value;
	var a = document.getElementById("keyA").value;
	var currentPrime = document.getElementById("prime").value;
	document.getElementById("encryptA").value = powAndMod(currentGenerator, a, currentPrime);
}

function sendA() {
	document.getElementById("receivedB").value = document.getElementById("encryptA").value;
}

function calculateGAB() {
	var Gb = document.getElementById("receivedA").value;
	var a = document.getElementById("keyA").value;
	var currentPrime = document.getElementById("prime").value;
	document.getElementById("encryptAB").value = powAndMod(Gb, a, currentPrime);
}

function nextKeyB() {
	document.getElementById("keyB").value = Math.ceil((Math.random()*1000000))%primes[currentPrimeIndex];
}

function calculateGB() {
	var currentGenerator  = document.getElementById("generator").value;
	var b = document.getElementById("keyB").value;
	var currentPrime = document.getElementById("prime").value;
	document.getElementById("encryptB").value = powAndMod(currentGenerator, b, currentPrime);
}

function sendB() {
	document.getElementById("receivedA").value = document.getElementById("encryptB").value;
}

function calculateGBA() {
	var Ga = document.getElementById("receivedB").value;
	var b = document.getElementById("keyB").value;
	var currentPrime = document.getElementById("prime").value;
	document.getElementById("encryptBA").value = powAndMod(Ga, b, currentPrime);
}
